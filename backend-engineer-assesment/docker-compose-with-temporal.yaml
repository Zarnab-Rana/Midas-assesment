services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8081:8081'
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=secret
    networks:
      - temporal-network
    depends_on:
      - postgres
      - mysql
      - temporal
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - 5432:5432
    networks:
      - temporal-network
  mysql:
    container_name: temporal-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    image: mysql:8
    networks:
      - temporal-network
    ports:
      - 3307:3306
    volumes:
      - /var/lib/mysql
  temporal:
    container_name: temporal
    depends_on:
      - mysql
    environment:
      - DB=mysql
      - DB_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PWD=root
      - MYSQL_SEEDS=mysql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:1.23.0
    networks:
      - temporal-network
    ports:
      - 7234:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    labels:
      kompose.volume.type: configMap
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.23.0
    networks:
      - temporal-network
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.22.3
    networks:
      - temporal-network
    ports:
      - 8080:8080
networks:
  temporal-network:
    driver: bridge
    name: temporal-network


